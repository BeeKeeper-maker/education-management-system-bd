      <Route path="/students/:id">
        <ProtectedRoute 
          component={StudentProfile}
          allowedRoles={['superadmin', 'admin', 'teacher']}
        />
      </Route>

      <Route path="/attendance/take">
        <ProtectedRoute 
          component={TakeAttendance}
          allowedRoles={['superadmin', 'admin', 'teacher']}
        />
      </Route>

      <Route path="/attendance/reports">
        <ProtectedRoute 
          component={AttendanceReports}
          allowedRoles={['superadmin', 'admin']}
        />
      </Route>

      <Route path="/timetable/builder">
        <ProtectedRoute 
          component={TimetableBuilder}
          allowedRoles={['superadmin', 'admin']}
        />
      </Route>

      <Route path="/timetable/my">
        <ProtectedRoute 
          component={MyTimetable}
          allowedRoles={['teacher', 'student']}
        />
      </Route>

      <Route path="/exams">
        <ProtectedRoute 
          component={ExamManagement}
          allowedRoles={['superadmin', 'admin']}
        />
      </Route>

      <Route path="/exams/:examId/schedule">
        <ProtectedRoute 
          component={ExamSchedule}
          allowedRoles={['superadmin', 'admin']}
        />
      </Route>

      <Route path="/exams/marks/:examSubjectId">
        <ProtectedRoute 
          component={MarksEntry}
          allowedRoles={['superadmin', 'admin', 'teacher']}
        />
      </Route>

      <Route path="/teachers">
        <ProtectedRoute component={() => <div>Teachers Page (Coming Soon)</div>} />
      </Route>

      <Route path="/classes">
        <ProtectedRoute component={() => <div>Classes Page (Coming Soon)</div>} />
      </Route>

      <Route path="/notifications">
        <ProtectedRoute component={() => <div>Notifications Page (Coming Soon)</div>} />
      </Route>

      <Route path="/settings">
        <ProtectedRoute component={() => <div>Settings Page (Coming Soon)</div>} />
      </Route>

      <Route path="/">
        <Redirect to="/dashboard" />
      </Route>

      <Route>
        <div className="flex items-center justify-center min-h-screen">
          <div className="text-center">
            <h1 className="text-4xl font-bold mb-4">404</h1>
            <p className="text-muted-foreground">Page not found</p>
          </div>
        </div>
      </Route>
    </Switch>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <AuthProvider>
        <AppRoutes />
        <Toaster />
      </AuthProvider>
    </QueryClientProvider>
  );
}

export default App;