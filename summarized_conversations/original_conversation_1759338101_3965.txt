{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="server/src/db/schema/academic.ts">\nimport { pgTable, text, timestamp, uuid, varchar, integer, boolean } from \'drizzle-orm/pg-core\';\nimport { academicSessions, shifts } from \'./organization\';\nimport { users } from \'./users\';\n\nexport const classes = pgTable(\'classes\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  name: varchar(\'name\', { length: 100 }).notNull(), // e.g., "Class 1", "Grade 10"\n  numericGrade: integer(\'numeric_grade\'), // 1, 2, 3, etc.\n  academicSessionId: uuid(\'academic_session_id\').references(() => academicSessions.id).notNull(),\n  shiftId: uuid(\'shift_id\').references(() => shifts.id),\n  description: text(\'description\'),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport const sections = pgTable(\'sections\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  name: varchar(\'name\', { length: 50 }).notNull(), // A, B, C, etc.\n  classId: uuid(\'class_id\').references(() => classes.id).notNull(),\n  capacity: integer(\'capacity\').default(40),\n  roomNumber: varchar(\'room_number\', { length: 50 }),\n  classTeacherId: uuid(\'class_teacher_id\').references(() => users.id),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport const subjects = pgTable(\'subjects\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  name: varchar(\'name\', { length: 255 }).notNull(),\n  code: varchar(\'code\', { length: 50 }).unique().notNull(),\n  description: text(\'description\'),\n  type: varchar(\'type\', { length: 50 }), // theory, practical, both\n  isOptional: boolean(\'is_optional\').default(false).notNull(),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport const classSubjects = pgTable(\'class_subjects\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  classId: uuid(\'class_id\').references(() => classes.id).notNull(),\n  subjectId: uuid(\'subject_id\').references(() => subjects.id).notNull(),\n  teacherId: uuid(\'teacher_id\').references(() => users.id),\n  weeklyHours: integer(\'weekly_hours\').default(0),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport const syllabusTopics = pgTable(\'syllabus_topics\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  classSubjectId: uuid(\'class_subject_id\').references(() => classSubjects.id).notNull(),\n  topicName: varchar(\'topic_name\', { length: 255 }).notNull(),\n  description: text(\'description\'),\n  orderIndex: integer(\'order_index\').default(0),\n  isCompleted: boolean(\'is_completed\').default(false).notNull(),\n  completedDate: timestamp(\'completed_date\'),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport type Class = typeof classes.$inferSelect;\nexport type Section = typeof sections.$inferSelect;\nexport type Subject = typeof subjects.$inferSelect;\nexport type ClassSubject = typeof classSubjects.$inferSelect;\nexport type SyllabusTopic = typeof syllabusTopics.$inferSelect;\n</create-file>\n</function_calls>'}