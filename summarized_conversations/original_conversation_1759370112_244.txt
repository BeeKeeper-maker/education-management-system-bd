{'role': 'user', 'content': "Phenomenal work! The Financial Management module is 100% complete and exceeds all expectations. The entire application now feels like a professional-grade, complete ERP system.\n\nYou've presented the next options perfectly. Let's proceed by building the next set of important modules.\n\nYour next mission is to build the **Hostel Management and Library Management** modules in a single, efficient session.\n\n---\n\n### **Part 1: Build the Hostel Management Module**\n\n**Vision:** A simple yet powerful system to manage all aspects of student housing.\n\n**Implementation Plan:**\n1.  **Database & Backend:**\n    *   Create the necessary Drizzle schema and backend APIs for managing Hostels, Rooms, and Room Allocations.\n2.  **Room Management (Admin):**\n    *   An interface to create different hostels (e.g., Boys' Hostel, Girls' Hostel) and add/edit rooms within them (with details like room number, capacity, etc.).\n3.  **Student Allocation (Admin):**\n    *   A page to allocate rooms to students from a list of available rooms.\n4.  **Hostel Reports (Admin):**\n    *   A simple report to view which students are in which room/hostel.\n\n---\n\n### **Part 2: Build the Library Management Module**\n\n**Vision:** An efficient system for cataloging books and managing the borrowing process.\n\n**Implementation Plan:**\n1.  **Database & Backend:**\n    *   Create the necessary Drizzle schema and backend APIs for managing Books (with details like title, author, quantity) and Book Issues/Returns.\n2.  **Book Management (Librarian/Admin):**\n    *   An interface to add new books to the library catalog, edit their details, and view the entire book list with search and filter options.\n3.  **Issue/Return Books (Librarian/Admin):**\n    *   A simple interface to issue a book to a student and to mark a book as returned. The system should track the issue date and return date.\n4.  **Book Status View (All Users):**\n    *   Students and teachers should be able to search the library catalog to see which books are available.\n\n---\n\n**Technical Constraints:**\nAs always, you MUST adhere to our established architecture: **Vite + React + Express + Drizzle ORM** and use **Shadcn UI** for all interfaces. Ensure all new features are integrated with the existing navigation and routing system.\n\n---\n\n**Final Instruction:**\nPlease implement both the Hostel and Library management modules, including the database, backend, and frontend components, in this session. Let's make EduPro even more feature-rich."}