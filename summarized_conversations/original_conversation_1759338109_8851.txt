{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="server/src/utils/response.ts">\nimport { Response } from \'express\';\n\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  message?: string;\n  data?: T;\n  error?: string;\n  errors?: Record<string, string[]>;\n}\n\nexport function successResponse<T>(\n  res: Response,\n  data: T,\n  message?: string,\n  statusCode: number = 200\n): Response {\n  return res.status(statusCode).json({\n    success: true,\n    message,\n    data,\n  } as ApiResponse<T>);\n}\n\nexport function errorResponse(\n  res: Response,\n  error: string,\n  statusCode: number = 400,\n  errors?: Record<string, string[]>\n): Response {\n  return res.status(statusCode).json({\n    success: false,\n    error,\n    errors,\n  } as ApiResponse);\n}\n\nexport function validationErrorResponse(\n  res: Response,\n  errors: Record<string, string[]>\n): Response {\n  return res.status(422).json({\n    success: false,\n    error: \'Validation failed\',\n    errors,\n  } as ApiResponse);\n}\n\nexport function unauthorizedResponse(\n  res: Response,\n  message: string = \'Unauthorized\'\n): Response {\n  return res.status(401).json({\n    success: false,\n    error: message,\n  } as ApiResponse);\n}\n\nexport function forbiddenResponse(\n  res: Response,\n  message: string = \'Forbidden\'\n): Response {\n  return res.status(403).json({\n    success: false,\n    error: message,\n  } as ApiResponse);\n}\n\nexport function notFoundResponse(\n  res: Response,\n  message: string = \'Resource not found\'\n): Response {\n  return res.status(404).json({\n    success: false,\n    error: message,\n  } as ApiResponse);\n}\n</create-file>\n</function_calls>'}