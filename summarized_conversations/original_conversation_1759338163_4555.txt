{'role': 'assistant', 'content': '## Step 3: Create Enhanced Sidebar with Role-Based Navigation\n\n<function_calls>\n<str-replace file_path="client/src/components/layout/Sidebar.tsx">\n<old_str>import { Link, useLocation } from \'wouter\';\nimport { cn } from \'@/lib/utils\';\nimport { t } from \'@/i18n\';\nimport {\n  LayoutDashboard,\n  Users,\n  GraduationCap,\n  BookOpen,\n  Calendar,\n  CheckSquare,\n  Bell,\n  Settings,\n  LogOut,\n} from \'lucide-react\';\nimport { useAuth } from \'@/contexts/AuthContext\';\nimport { Button } from \'@/components/ui/button\';\n\nconst navigation = [\n  { name: \'dashboard.title\', href: \'/dashboard\', icon: LayoutDashboard },\n  { name: \'students.title\', href: \'/students\', icon: Users },\n  { name: \'Teachers\', href: \'/teachers\', icon: GraduationCap },\n  { name: \'Classes\', href: \'/classes\', icon: BookOpen },\n  { name: \'attendance.title\', href: \'/attendance\', icon: CheckSquare },\n  { name: \'timetable.title\', href: \'/timetable\', icon: Calendar },\n  { name: \'notifications.title\', href: \'/notifications\', icon: Bell },\n  { name: \'settings.title\', href: \'/settings\', icon: Settings },\n];\n\nexport default function Sidebar() {\n  const [location] = useLocation();\n  const { user, logout } = useAuth();\n\n  const handleLogout = async () => {\n    await logout();\n  };\n\n  return (\n    <div className="flex flex-col h-full bg-card border-r">\n      {/* Logo */}\n      <div className="p-6 border-b">\n        <div className="flex items-center space-x-3">\n          <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center">\n            <span className="text-lg font-bold text-primary-foreground">EP</span>\n          </div>\n          <div>\n            <h1 className="text-xl font-bold">{t(\'common.appName\')}</h1>\n            <p className="text-xs text-muted-foreground">Education Management</p>\n          </div>\n        </div>\n      </div>\n\n      {/* User Info */}\n      <div className="p-4 border-b">\n        <div className="flex items-center space-x-3">\n          <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">\n            <span className="text-sm font-semibold text-primary">\n              {user?.firstName?.[0]}{user?.lastName?.[0]}\n            </span>\n          </div>\n          <div className="flex-1 min-w-0">\n            <p className="text-sm font-medium truncate">\n              {user?.firstName} {user?.lastName}\n            </p>\n            <p className="text-xs text-muted-foreground capitalize">{user?.role}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className="flex-1 p-4 space-y-1 overflow-y-auto">\n        {navigation.map((item) => {\n          const Icon = item.icon;\n          const isActive = location === item.href;\n          \n          return (\n            <Link key={item.href} href={item.href}>\n              <a\n                className={cn(\n                  \'flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors\',\n                  isActive\n                    ? \'bg-primary text-primary-foreground\'\n                    : \'hover:bg-accent text-muted-foreground hover:text-foreground\'\n                )}\n              >\n                <Icon className="h-5 w-5" />\n                <span className="text-sm font-medium">{t(item.name)}</span>\n              </a>\n            </Link>\n          );\n        })}\n      </nav>\n\n      {/* Logout */}\n      <div className="p-4 border-t">\n        <Button\n          variant="ghost"\n          className="w-full justify-start"\n          onClick={handleLogout}\n        >\n          <LogOut className="h-5 w-5 mr-3" />\n          {t(\'common.logout\')}\n        </Button>\n      </div>\n    </div>\n  );\n}</old_str>\n<new_str>import { Link, useLocation } from \'wouter\';\nimport { cn } from \'@/lib/utils\';\nimport { t } from \'@/i18n\';\nimport { LogOut, ChevronLeft, ChevronRight } from \'lucide-react\';\nimport { useAuth } from \'@/contexts/AuthContext\';\nimport { Button } from \'@/components/ui/button\';\nimport { getNavigationForRole } from \'@/lib/navigation\';\nimport { useState } from \'react\';\nimport { Badge } from \'@/components/ui/badge\';\n\nexport default function Sidebar() {\n  const [location] = useLocation();\n  const { user, logout } = useAuth();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n\n  const handleLogout = async () => {\n    await logout();\n  };\n\n  // Get navigation items based on user role\n  const navigation = user ? getNavigationForRole(user.role) : [];\n\n  return (\n    <div className={cn(\n      "flex flex-col h-full bg-card border-r transition-all duration-300",\n      isCollapsed ? "w-16" : "w-64"\n    )}>\n      {/* Logo */}\n      <div className="p-4 border-b flex items-center justify-between">\n        {!isCollapsed && (\n          <div className="flex items-center space-x-3">\n            <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center">\n              <span className="text-lg font-bold text-primary-foreground">EP</span>\n            </div>\n            <div>\n              <h1 className="text-lg font-bold">{t(\'common.appName\')}</h1>\n              <p className="text-xs text-muted-foreground">Education System</p>\n            </div>\n          </div>\n        )}\n        {isCollapsed && (\n          <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center mx-auto">\n            <span className="text-lg font-bold text-primary-foreground">EP</span>\n          </div>\n        )}\n      </div>\n\n      {/* User Info */}\n      <div className="p-4 border-b">\n        <div className={cn(\n          "flex items-center",\n          isCollapsed ? "justify-center" : "space-x-3"\n        )}>\n          <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0">\n            <span className="text-sm font-semibold text-primary">\n              {user?.firstName?.[0]}{user?.lastName?.[0]}\n            </span>\n          </div>\n          {!isCollapsed && (\n            <div className="flex-1 min-w-0">\n              <p className="text-sm font-medium truncate">\n                {user?.firstName} {user?.lastName}\n              </p>\n              <p className="text-xs text-muted-foreground capitalize">{user?.role}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className="flex-1 p-3 space-y-1 overflow-y-auto">\n        {navigation.map((item) => {\n          const Icon = item.icon;\n          const isActive = location === item.href;\n          \n          return (\n            <Link key={item.href} href={item.href}>\n              <a\n                className={cn(\n                  \'flex items-center px-3 py-2 rounded-lg transition-colors group relative\',\n                  isActive\n                    ? \'bg-primary text-primary-foreground\'\n                    : \'hover:bg-accent text-muted-foreground hover:text-foreground\',\n                  isCollapsed ? \'justify-center\' : \'space-x-3\'\n                )}\n                title={isCollapsed ? item.name : undefined}\n              >\n                <Icon className="h-5 w-5 flex-shrink-0" />\n                {!isCollapsed && (\n                  <>\n                    <span className="text-sm font-medium flex-1">{item.name}</span>\n                    {item.badge && (\n                      <Badge variant="secondary" className="ml-auto">\n                        {item.badge}\n                      </Badge>\n                    )}\n                  </>\n                )}\n                {isCollapsed && (\n                  <div className="absolute left-full ml-2 px-2 py-1 bg-popover text-popover-foreground text-sm rounded-md shadow-md opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap z-50">\n                    {item.name}\n                  </div>\n                )}\n              </a>\n            </Link>\n          );\n        })}\n      </nav>\n\n      {/* Collapse Toggle */}\n      <div className="p-3 border-t">\n        <Button\n          variant="ghost"\n          size="sm"\n          className={cn("w-full", isCollapsed ? "justify-center" : "justify-start")}\n          onClick={() => setIsCollapsed(!isCollapsed)}\n        >\n          {isCollapsed ? (\n            <ChevronRight className="h-4 w-4" />\n          ) : (\n            <>\n              <ChevronLeft className="h-4 w-4 mr-2" />\n              <span className="text-xs">Collapse</span>\n            </>\n          )}\n        </Button>\n      </div>\n\n      {/* Logout */}\n      <div className="p-3 border-t">\n        <Button\n          variant="ghost"\n          className={cn("w-full", isCollapsed ? "justify-center px-2" : "justify-start")}\n          onClick={handleLogout}\n          title={isCollapsed ? "Logout" : undefined}\n        >\n          <LogOut className="h-5 w-5" />\n          {!isCollapsed && <span className="ml-3">{t(\'common.logout\')}</span>}\n        </Button>\n      </div>\n    </div>\n  );\n}</new_str>\n</str-replace>\n</function_calls>'}