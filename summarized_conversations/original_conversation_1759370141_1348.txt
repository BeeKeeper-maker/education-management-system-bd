{'role': 'assistant', 'content': 'Great! Now let\'s create seed data for both modules. First, let\'s create a seed file:\n\n<function_calls>\n<create-file file_path="server/src/db/seeds/hostel-library-seed.ts">\nimport { db } from \'../index\';\nimport { hostels, rooms, books } from \'../schema\';\n\nexport async function seedHostelAndLibrary() {\n  console.log(\'üè® Seeding hostel data...\');\n\n  // Seed Hostels\n  const hostelData = [\n    {\n      name: "Boys\' Hostel A",\n      type: \'boys\',\n      totalCapacity: 100,\n      address: \'123 Campus Road, University Area\',\n      wardenName: \'Mr. John Smith\',\n      wardenPhone: \'+1234567890\',\n      facilities: JSON.stringify([\'WiFi\', \'Gym\', \'Common Room\', \'Laundry\', \'Cafeteria\']),\n      description: \'Modern hostel facility for male students with all amenities\',\n    },\n    {\n      name: "Girls\' Hostel B",\n      type: \'girls\',\n      totalCapacity: 80,\n      address: \'456 Campus Road, University Area\',\n      wardenName: \'Ms. Sarah Johnson\',\n      wardenPhone: \'+1234567891\',\n      facilities: JSON.stringify([\'WiFi\', \'Gym\', \'Common Room\', \'Laundry\', \'Cafeteria\', \'24/7 Security\']),\n      description: \'Safe and comfortable hostel for female students\',\n    },\n    {\n      name: \'International Hostel\',\n      type: \'mixed\',\n      totalCapacity: 60,\n      address: \'789 Campus Road, University Area\',\n      wardenName: \'Dr. Michael Brown\',\n      wardenPhone: \'+1234567892\',\n      facilities: JSON.stringify([\'WiFi\', \'Study Room\', \'Recreation Area\', \'Kitchen\']),\n      description: \'Hostel for international and exchange students\',\n    },\n  ];\n\n  const createdHostels = await db.insert(hostels).values(hostelData).returning();\n  console.log(`‚úÖ Created ${createdHostels.length} hostels`);\n\n  // Seed Rooms for each hostel\n  const roomData = [];\n  \n  // Boys Hostel A - 20 rooms\n  for (let floor = 1; floor <= 4; floor++) {\n    for (let roomNum = 1; roomNum <= 5; roomNum++) {\n      roomData.push({\n        hostelId: createdHostels[0].id,\n        roomNumber: `${floor}0${roomNum}`,\n        floor,\n        capacity: floor === 1 ? 2 : 3, // Ground floor: double, others: triple\n        type: floor === 1 ? \'double\' : \'triple\',\n        facilities: JSON.stringify([\'Attached Bathroom\', \'Study Table\', \'Wardrobe\', \'Fan\']),\n        monthlyRent: floor === 1 ? 3000 : 2500,\n      });\n    }\n  }\n\n  // Girls Hostel B - 16 rooms\n  for (let floor = 1; floor <= 4; floor++) {\n    for (let roomNum = 1; roomNum <= 4; roomNum++) {\n      roomData.push({\n        hostelId: createdHostels[1].id,\n        roomNumber: `${floor}0${roomNum}`,\n        floor,\n        capacity: 2,\n        type: \'double\',\n        facilities: JSON.stringify([\'Attached Bathroom\', \'AC\', \'Study Table\', \'Wardrobe\']),\n        monthlyRent: 3500,\n      });\n    }\n  }\n\n  // International Hostel - 15 rooms\n  for (let floor = 1; floor <= 3; floor++) {\n    for (let roomNum = 1; roomNum <= 5; roomNum++) {\n      roomData.push({\n        hostelId: createdHostels[2].id,\n        roomNumber: `${floor}0${roomNum}`,\n        floor,\n        capacity: roomNum <= 2 ? 1 : 2, // First 2 rooms per floor: single, rest: double\n        type: roomNum <= 2 ? \'single\' : \'double\',\n        facilities: JSON.stringify([\'Attached Bathroom\', \'AC\', \'WiFi\', \'Study Table\']),\n        monthlyRent: roomNum <= 2 ? 4000 : 3000,\n      });\n    }\n  }\n\n  const createdRooms = await db.insert(rooms).values(roomData).returning();\n  console.log(`‚úÖ Created ${createdRooms.length} rooms`);\n\n  console.log(\'üìö Seeding library data...\');\n\n  // Seed Books\n  const bookData = [\n    // Fiction\n    {\n      title: \'To Kill a Mockingbird\',\n      author: \'Harper Lee\',\n      isbn: \'978-0-06-112008-4\',\n      publisher: \'J.B. Lippincott & Co.\',\n      publicationYear: 1960,\n      category: \'Fiction\',\n      language: \'English\',\n      edition: \'50th Anniversary Edition\',\n      pages: 324,\n      totalQuantity: 5,\n      availableQuantity: 5,\n      shelfLocation: \'A-101\',\n      description: \'A classic novel of a lawyer in the Depression-era South defending a black man charged with rape\',\n      price: 1500,\n    },\n    {\n      title: \'1984\',\n      author: \'George Orwell\',\n      isbn: \'978-0-452-28423-4\',\n      publisher: \'Secker & Warburg\',\n      publicationYear: 1949,\n      category: \'Fiction\',\n      language: \'English\',\n      pages: 328,\n      totalQuantity: 4,\n      availableQuantity: 4,\n      shelfLocation: \'A-102\',\n      description: \'A dystopian social science fiction novel and cautionary tale\',\n      price: 1200,\n    },\n    {\n      title: \'Pride and Prejudice\',\n      author: \'Jane Austen\',\n      isbn: \'978-0-14-143951-8\',\n      publisher: \'T. Egerton\',\n      publicationYear: 1813,\n      category: \'Fiction\',\n      language: \'English\',\n      pages: 432,\n      totalQuantity: 3,\n      availableQuantity: 3,\n      shelfLocation: \'A-103\',\n      description: \'A romantic novel of manners\',\n      price: 1000,\n    },\n\n    // Science\n    {\n      title: \'A Brief History of Time\',\n      author: \'Stephen Hawking\',\n      isbn: \'978-0-553-38016-3\',\n      publisher: \'Bantam Books\',\n      publicationYear: 1988,\n      category: \'Science\',\n      language: \'English\',\n      pages: 256,\n      totalQuantity: 6,\n      availableQuantity: 6,\n      shelfLocation: \'B-201\',\n      description: \'A landmark volume in science writing\',\n      price: 1800,\n    },\n    {\n      title: \'The Selfish Gene\',\n      author: \'Richard Dawkins\',\n      isbn: \'978-0-19-286092-7\',\n      publisher: \'Oxford University Press\',\n      publicationYear: 1976,\n      category: \'Science\',\n      language: \'English\',\n      pages: 360,\n      totalQuantity: 4,\n      availableQuantity: 4,\n      shelfLocation: \'B-202\',\n      description: \'A gene-centered view of evolution\',\n      price: 1600,\n    },\n\n    // Mathematics\n    {\n      title: \'Introduction to Algorithms\',\n      author: \'Thomas H. Cormen\',\n      isbn: \'978-0-262-03384-8\',\n      publisher: \'MIT Press\',\n      publicationYear: 2009,\n      category: \'Mathematics\',\n      language: \'English\',\n      edition: \'3rd Edition\',\n      pages: 1312,\n      totalQuantity: 8,\n      availableQuantity: 8,\n      shelfLocation: \'C-301\',\n      description: \'Comprehensive textbook on algorithms\',\n      price: 3500,\n    },\n    {\n      title: \'Calculus: Early Transcendentals\',\n      author: \'James Stewart\',\n      isbn: \'978-1-285-74155-0\',\n      publisher: \'Cengage Learning\',\n      publicationYear: 2015,\n      category: \'Mathematics\',\n      language: \'English\',\n      edition: \'8th Edition\',\n      pages: 1368,\n      totalQuantity: 10,\n      availableQuantity: 10,\n      shelfLocation: \'C-302\',\n      description: \'Comprehensive calculus textbook\',\n      price: 4000,\n    },\n\n    // Computer Science\n    {\n      title: \'Clean Code\',\n      author: \'Robert C. Martin\',\n      isbn: \'978-0-13-235088-4\',\n      publisher: \'Prentice Hall\',\n      publicationYear: 2008,\n      category: \'Computer Science\',\n      language: \'English\',\n      pages: 464,\n      totalQuantity: 7,\n      availableQuantity: 7,\n      shelfLocation: \'D-401\',\n      description: \'A handbook of agile software craftsmanship\',\n      price: 2500,\n    },\n    {\n      title: \'Design Patterns\',\n      author: \'Erich Gamma\',\n      isbn: \'978-0-201-63361-0\',\n      publisher: \'Addison-Wesley\',\n      publicationYear: 1994,\n      category: \'Computer Science\',\n      language: \'English\',\n      pages: 416,\n      totalQuantity: 5,\n      availableQuantity: 5,\n      shelfLocation: \'D-402\',\n      description: \'Elements of reusable object-oriented software\',\n      price: 2800,\n    },\n\n    // History\n    {\n      title: \'Sapiens: A Brief History of Humankind\',\n      author: \'Yuval Noah Harari\',\n      isbn: \'978-0-06-231609-7\',\n      publisher: \'Harper\',\n      publicationYear: 2014,\n      category: \'History\',\n      language: \'English\',\n      pages: 443,\n      totalQuantity: 6,\n      availableQuantity: 6,\n      shelfLocation: \'E-501\',\n      description: \'A narrative history of humanity\',\n      price: 2000,\n    },\n\n    // Philosophy\n    {\n      title: \'Meditations\',\n      author: \'Marcus Aurelius\',\n      isbn: \'978-0-14-044933-4\',\n      publisher: \'Penguin Classics\',\n      publicationYear: 180,\n      category: \'Philosophy\',\n      language: \'English\',\n      pages: 304,\n      totalQuantity: 4,\n      availableQuantity: 4,\n      shelfLocation: \'F-601\',\n      description: \'Personal writings by the Roman Emperor\',\n      price: 800,\n    },\n\n    // Business\n    {\n      title: \'The Lean Startup\',\n      author: \'Eric Ries\',\n      isbn: \'978-0-307-88789-4\',\n      publisher: \'Crown Business\',\n      publicationYear: 2011,\n      category: \'Business\',\n      language: \'English\',\n      pages: 336,\n      totalQuantity: 5,\n      availableQuantity: 5,\n      shelfLocation: \'G-701\',\n      description: \'How constant innovation creates radically successful businesses\',\n      price: 1800,\n    },\n  ];\n\n  const createdBooks = await db.insert(books).values(bookData).returning();\n  console.log(`‚úÖ Created ${createdBooks.length} books`);\n\n  console.log(\'‚úÖ Hostel and Library seeding completed!\');\n}\n\n// Run if called directly\nif (require.main === module) {\n  seedHostelAndLibrary()\n    .then(() => {\n      console.log(\'‚úÖ Seeding completed successfully\');\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\'‚ùå Seeding failed:\', error);\n      process.exit(1);\n    });\n}\n</create-file>\n</function_calls>'}