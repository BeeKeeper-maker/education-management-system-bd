{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="server/src/middleware/errorHandler.ts">\nimport { Request, Response, NextFunction } from \'express\';\nimport { errorResponse } from \'../utils/response\';\n\nexport function errorHandler(\n  err: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  console.error(\'Error:\', err);\n\n  // Handle specific error types\n  if (err.name === \'ValidationError\') {\n    return errorResponse(res, err.message, 422);\n  }\n\n  if (err.name === \'UnauthorizedError\') {\n    return errorResponse(res, \'Unauthorized\', 401);\n  }\n\n  if (err.name === \'ForbiddenError\') {\n    return errorResponse(res, \'Forbidden\', 403);\n  }\n\n  // Default error response\n  return errorResponse(\n    res,\n    process.env.NODE_ENV === \'production\'\n      ? \'Internal server error\'\n      : err.message,\n    500\n  );\n}\n\nexport function notFoundHandler(req: Request, res: Response) {\n  return errorResponse(res, `Route ${req.originalUrl} not found`, 404);\n}\n</create-file>\n</function_calls>'}