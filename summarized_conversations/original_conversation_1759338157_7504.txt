{'role': 'user', 'content': 'The authentication system is an excellent start. Now, let\'s build upon this foundation according to our EduPro vision.\n\nOur next major goal is to create a dynamic and role-based **Dashboard and User Management** system.\n\nHereâ€™s the high-level plan:\n1.  **Role-Based Main Layout:** Enhance the `MainLayout.tsx`. When a user logs in, this layout should:\n    a. Display a clean sidebar (`Sidebar.tsx`) and a top navigation bar.\n    b. The sidebar\'s menu options must dynamically change based on the logged-in user\'s role (e.g., SuperAdmin sees "Institution Settings", a Teacher sees "My Classes"). Use the user data from our `AuthContext`.\n    c. The top bar should show the user\'s name and a functional logout button.\n\n2.  **Dashboard Home:** Create a basic dashboard homepage (`Dashboard.tsx`). For now, it should simply display a welcome message like "Welcome, [User\'s Name]!" and show their role. We will add widgets later.\n\n3.  **User Management Module (for SuperAdmin/Admin):** This is a critical feature.\n    a. Create a new page for "User Management" that is only accessible to `SuperAdmin` and `Admin` roles.\n    b. On this page, display a list of all users from the database in a well-designed data table (use Shadcn UI\'s Table component). The table should have columns for Name, Email, Role, and Status.\n    c. Implement a "Create New User" feature. This should open a modal or a new page with a form to add a new user (First Name, Last Name, Email, Password, Role). Ensure proper validation using Zod.\n    d. Add backend APIs (routes, controllers) to support fetching all users and creating a new user. Secure these APIs so that only authorized roles can access them.\n\nPlease implement these features using our existing tech stack and best practices for scalability and code organization. Ensure the UI is modern, responsive, and consistent with the Shadcn UI design system.'}