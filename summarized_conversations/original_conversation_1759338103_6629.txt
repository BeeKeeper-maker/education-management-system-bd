{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="server/src/db/schema/notifications.ts">\nimport { pgTable, text, timestamp, uuid, varchar, boolean } from \'drizzle-orm/pg-core\';\nimport { users } from \'./users\';\n\nexport const notifications = pgTable(\'notifications\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  userId: uuid(\'user_id\').references(() => users.id).notNull(),\n  title: varchar(\'title\', { length: 255 }).notNull(),\n  message: text(\'message\').notNull(),\n  type: varchar(\'type\', { length: 50 }).notNull(), // info, success, warning, error\n  category: varchar(\'category\', { length: 50 }), // attendance, exam, fee, announcement, etc.\n  isRead: boolean(\'is_read\').default(false).notNull(),\n  link: varchar(\'link\', { length: 500 }),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n});\n\nexport const announcements = pgTable(\'announcements\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  title: varchar(\'title\', { length: 255 }).notNull(),\n  content: text(\'content\').notNull(),\n  targetRole: varchar(\'target_role\', { length: 50 }), // all, student, teacher, guardian, etc.\n  priority: varchar(\'priority\', { length: 20 }).default(\'normal\').notNull(), // low, normal, high, urgent\n  publishDate: timestamp(\'publish_date\').defaultNow().notNull(),\n  expiryDate: timestamp(\'expiry_date\'),\n  attachmentUrl: text(\'attachment_url\'),\n  createdBy: uuid(\'created_by\').references(() => users.id).notNull(),\n  isActive: boolean(\'is_active\').default(true).notNull(),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n  updatedAt: timestamp(\'updated_at\').defaultNow().notNull(),\n});\n\nexport const messages = pgTable(\'messages\', {\n  id: uuid(\'id\').defaultRandom().primaryKey(),\n  senderId: uuid(\'sender_id\').references(() => users.id).notNull(),\n  receiverId: uuid(\'receiver_id\').references(() => users.id).notNull(),\n  subject: varchar(\'subject\', { length: 255 }),\n  content: text(\'content\').notNull(),\n  isRead: boolean(\'is_read\').default(false).notNull(),\n  parentMessageId: uuid(\'parent_message_id\').references(() => messages.id), // For threading\n  attachmentUrl: text(\'attachment_url\'),\n  createdAt: timestamp(\'created_at\').defaultNow().notNull(),\n});\n\nexport type Notification = typeof notifications.$inferSelect;\nexport type Announcement = typeof announcements.$inferSelect;\nexport type Message = typeof messages.$inferSelect;\n</create-file>\n</function_calls>'}